1.  a database called 'my_first_db'.
    use my_first_db

2. Create students collection.
    > db.createCollection("students")

3. 4. Each document you insert into this collection should have the following format:
({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
Create 5 students with the appropriate info.
    > db.students.insert({name: "Vjosa", home_state: "Kosovo", lucky_number: 26, birthday: {month: 11, day: 26, year: 1999}})
    > db.students.insert({name: "Sara", home_state: "California", lucky_number: 16, birthday: {month: 9, day: 22, year: 1987}})
    > db.students.insert({name: "Lory", home_state: "England", lucky_number: 2, birthday: {month: 3, day: 11, year: 1993}})
    > db.students.insert({name: "Rina", home_state: "Washington", lucky_number: 6, birthday: {month: 6, day: 15, year: 1995}})
    > db.students.insert({name: "Besarta", home_state: "Washington", lucky_number: 11, birthday: {month: 3, day: 5, year: 1990}})

5. Get all students.
    > db.students.find().pretty()

6. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
    > db.students.find({$or: [{home_state: "Washington"}, {home_state: "California"}]}).pretty()

7. Get all students whose lucky number is:
    a) greater than 3:
        > db.students.find({lucky_number: {$gt: 3}}).pretty()
    b) less than or equal to 10:
        > db.students.find({lucky_number: {$lte: 10}}).pretty()
    c) between 1 and 9 (inclusive):
        > db.students.find({$and: [{lucky_number: {$gte: 1}}, {lucky_number: {$lte: 9}}]}).pretty()

8. Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following 
entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
    > db.students.update({}, {$set: {'interesats': ['coding', 'brunch', 'MongoDB']}}, {multi: true})

9. Add some unique interests for each particular student into each of their interest arrays.
    > db.students.update({name:'Vjosa'}, {$push:{interests:{$each:['traveling', 'playing guitar'}}})
    > db.students.update({name:'Sara'}, {$push:{interests:{$each:['dancing'}}})
    > db.students.update({name:'Rina'}, {$push:{interests:{$each:['cooking']}}})
    > db.students.update({name:'Lory'}, {$push:{interests:{$each:['reading']}}})
    > db.students.update({name:'Besarta'}, {$push:{interests:{$each:['cooking']}}})

10. Add the interest 'taxes' into someone's interest array.
    > db.students.update({name:'Vjosa'}, {$push: {interests:'taxes'}})

11. Remove the 'taxes' interest you just added.
    > db.students.remove({name:'Vjosa'}, {$pull:{interests:'taxes'}})

12. Remove all students who are from California.
    > db.students.remove({home_state:'California'})

13. Remove a student by name.
    > db.students.remove({name: 'Sara'})

14. Remove a student whose lucky number is greater than 5 (JUST ONE)
    > db.students.remove({lucky_number:{$gt: 5}}, {justOne:true})

15. Add a field to each student collection called 'number_of_belts' and set it to 0.
    > db.students.update({}, {$set:{number_of_belts:0}}, {multi:true})

16. Increment this field by 1 for all students in Washington (Seattle Dojo).
    > db.students.update({home_state: 'Washington'}, {$inc:{number_of_belts:1}}, {multi:true})

17. Rename the 'number_of_belts' field to 'belts_earned'
    > db.students.update({}, {$rename: {'number_of_belts':'belts_earned'}}, {multi:true})

18. Remove the 'lucky_number' field.
    > db.students.update({}, {$unset:{lucky_number:""}}, {multi:true})
    
19. Add a 'updated_on' field, and set the value as the current date.
    > db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})